# Type of Triangle
solution
{
	SELECT CASE WHEN A + B <= C OR A + C <= B OR B + C <= A THEN 'Not A Triangle'
            WHEN A = B AND B = C THEN 'Equilateral'
            WHEN A = B OR A = C OR B = C THEN 'Isosceles'
            ELSE 'Scalene'
        END
	FROM TRIANGLES
}
----------------------------------------------------------------------------------------------------------
# The PADS
solution
{
	SELECT CONCAT (NAME, '(', Substring(occupation,1,1), ')') FROM occupations ORDER BY NAME ASC;

	select concat('There are a total of ',count(occupation),' ',lower(occupation),'s.') as total from occupations group by occupation order by total
}
----------------------------------------------------------------------------------------------------------
# Occupations
solution
{
	SELECT
    [Doctor], [Professor], [Singer], [Actor]
	FROM
	(
		SELECT ROW_NUMBER() OVER (PARTITION BY OCCUPATION ORDER BY NAME) [RowNumber], * FROM OCCUPATIONS
	) AS tempTable
	PIVOT
	(
		MAX(NAME) FOR OCCUPATION IN ([Doctor], [Professor], [Singer], [Actor])
	) AS pivotTable
}
----------------------------------------------------------------------------------------------------------
# Binary Tree Nodes
solution
{
	SELECT N,
	CASE 
		WHEN P IS NULL THEN 'Root'
		WHEN N IN (SELECT P FROM BST) THEN 'Inner'
		ELSE 'Leaf'
	END
	FROM BST
	ORDER BY N ASC;
}
----------------------------------------------------------------------------------------------------------
# New Companies
solution
{
	SELECT DISTINCT COMPANY.Company_code, COMPANY.Founder, 
					COUNT( DISTINCT  Lead_Manager.Lead_Manager_code), 
					COUNT( DISTINCT Senior_Manager.Senior_Manager_Code),
					COUNT( DISTINCT Manager.Manager_code), 
					COUNT( DISTINCT Employee.employee_code)
	FROM COMPANY, Lead_Manager, Senior_Manager, Manager, Employee
	where  company.company_code = employee.company_code 
		and  Lead_Manager.lead_manager_code = employee.lead_manager_code 
		and Senior_Manager.senior_manager_code = employee.senior_manager_code 
		and  Manager.manager_code = employee.manager_code
		
	group by COMPANY.company_code, Company.founder
	order by Company.company_code;
}
----------------------------------------------------------------------------------------------------------
