# Revising Aggregations - The Count Function
solution
{
	SSELECT COUNT(CITY.ID) FROM CITY WHERE POPULATION > 100000
}
----------------------------------------------------------------------------------------------------------
# Revising Aggregations - The Sum Function
solution
{
	SELECT SUM(CITY.POPULATION) FROM CITY WHERE CITY.DISTRICT = 'California' ;
}
----------------------------------------------------------------------------------------------------------
# Revising Aggregations - Averages
solution
{
	SELECT AVG(CITY.POPULATION) FROM CITY WHERE CITY.DISTRICT = 'California';
}
----------------------------------------------------------------------------------------------------------
# Average Population
solution
{
	SELECT Round(AVG(POPULATION), 0) FROM CITY;
}
----------------------------------------------------------------------------------------------------------
# Japan Population
solution
{
	SELECT SUM(CITY.POPULATION) FROM CITY WHERE CITY.COUNTRYCODE = 'JPN';
}
----------------------------------------------------------------------------------------------------------
# Population Density Difference
solution
{
	SELECT MAX(POPULATION) - MIN(POPULATION) FROM CITY;
}
----------------------------------------------------------------------------------------------------------
# The Blunder
solution
{
	SELECT 
        CEILING(AVG(EMPLOYEES.SALARY - CONVERT(decimal, REPLACE(EMPLOYEES.Salary, '0', ''))))
    FROM EMPLOYEES;
}
----------------------------------------------------------------------------------------------------------
# Top Earners
solution
{
	select TOP 1 SALARY * MONTHS as earnings, COUNT(*) FROM employee group by SALARY * MONTHS order by SALARY * MONTHS desc;
}
----------------------------------------------------------------------------------------------------------
# Weather Observation Station 2
solution
{
	SELECT ROUND(CAST(SUM(LAT_N) AS DECIMAL(10,2)),2), ROUND(CAST(SUM(LONG_W) AS DECIMAL(10,2)),2) FROM STATION;
}
----------------------------------------------------------------------------------------------------------
# Weather Observation Station 13
solution
{
	SELECT CAST(SUM(LAT_N) AS DECIMAL(10,4)) FROM STATION WHERE LAT_N > 38.7880 AND LAT_N < 137.2345;
}
----------------------------------------------------------------------------------------------------------
# Weather Observation Station 14
solution
{
	SELECT CONVERT(NUMERIC(10,4),MAX(LAT_N)) FROM STATION WHERE LAT_N < 137.2345
}
----------------------------------------------------------------------------------------------------------
# Weather Observation Station 15
solution
{
	SELECT TOP 1 CAST(LONG_W as DECIMAL(10,4)) FROM STATION WHERE LAT_N < 137.2345 ORDER BY LAT_N DESC;
}
----------------------------------------------------------------------------------------------------------
# Weather Observation Station 16
solution
{
	SELECT CAST( MIN(LAT_N) as DECIMAL(10,4)) FROM STATION WHERE LAT_N > 38.7780;
}
----------------------------------------------------------------------------------------------------------
# Weather Observation Station 17
solution
{
	SELECT TOP 1 CAST(LONG_W as DECIMAL (10,4)) FROM STATION WHERE LAT_N > 38.7780 ORDER BY LAT_N ASC;
}
----------------------------------------------------------------------------------------------------------
# Weather Observation Station 18
solution
{
	 SELECT CAST(ABS(MIN(LAT_N) - MAX(LAT_N)) + ABS(MIN(LONG_W) - MAX(LONG_W)) as decimal (10,4)) FROM STATION;
}
----------------------------------------------------------------------------------------------------------
# Weather Observation Station 20
solution
{
	SELECT CONVERT( NUMERIC(10,4) ,LAT_N) FROM (select LAT_N, ROW_NUMBER() OVER (ORDER BY LAT_N DESC ) AS RN FROM STATION ) A WHERE RN = ( SELECT CEILING(count(lat_n)/2.0) FROM STATION) ;
}
----------------------------------------------------------------------------------------------------------
